"use strict";

function genesisexpo_scroll_up() {
    var n;
    (n = jQuery).fn.goBack = function(e) {
        var t = {
                scrollTop: jQuery(window).height(),
                scrollSpeed: 600,
                fadeInSpeed: 1e3,
                fadeOutSpeed: 500
            },
            i = (e = n.extend(t, e), n(this));
        n(window).on("scroll", function() {
            n(window).scrollTop() > e.scrollTop ? i.addClass("active") : i.removeClass("active")
        }), i.on("click", function() {
            n("html,body").animate({
                scrollTop: 0
            }, e.scrollSpeed)
        })
    }, jQuery("#scroll_up").goBack()
}

function genesisexpo_blog_masonry_init() {
    if (jQuery(".blog_masonry").length) {
        var e = jQuery(".blog_masonry").get(0);
        imagesLoaded(e, function() {
            jQuery(".blog_masonry").isotope({
                layoutMode: "masonry",
                masonry: {
                    columnWidth: ".item"
                },
                itemSelector: ".item",
                percentPosition: !0
            }), jQuery(window).trigger("resize")
        })
    }
}

function genesisexpo_carousel_slick() {
    var e = jQuery(".genesisexpo_carousel_slick");
    0 !== e.length && e.each(function(e, t) {
        0 !== jQuery(this).closest(".blog-style-slider").length && (jQuery(this).on("init", function(e, t) {
            jQuery(this).find(".content-container > *").addClass("activate fadeInUp")
        }), jQuery(this).on("afterChange", function(e, t, i) {
            console.log(e), console.log(t), console.log(i), jQuery(this).find(".content-container > *").removeClass("off"), jQuery(this).find(".content-container > *").addClass("activate fadeInUp")
        }), jQuery(this).on("beforeChange", function(e, t, i) {
            jQuery(this).find(".content-container > *").removeClass("activate fadeInUp"), jQuery(this).find(".content-container > *").addClass("off")
        })), 0 < jQuery(this).closest(".blog-style-hero-image_type2").length && (carousel_resize(t), jQuery(window).resize(function() {
            carousel_resize(t)
        })), jQuery(this).hasClass("fade_slick") ? jQuery(this).slick({
            draggable: !0,
            fade: !0,
            speed: 900,
            cssEase: "cubic-bezier(0.7, 0, 0.3, 1)",
            touchThreshold: 100
        }) : jQuery(this).slick({})
    })
}

function carousel_resize(e) {
    var t, i = (e = jQuery(e)).data("slick"),
        n = 3,
        a = 1,
        s = !0;
    if (i) {
        for (var o = 0; o < i.responsive.length; o++) jQuery(window).width() < i.responsive[o].breakpoint && (3 != i.responsive[o].settings.slidesToShow && (s = !1), n = i.responsive[o].settings.slidesToShow);
        var r = e.width() / n;
        e.find(".item").each(function() {
            var e = jQuery(this);
            s && (a = jQuery(this).hasClass("span6") ? 1.5 : .75), t = Math.ceil(r * a), e.css("width", t + "px")
        })
    }
}

function genesisexpo_countdown_init() {
    var e = jQuery(".genesisexpo_module_countdown");
    0 !== e.length && e.each(function() {
        var e = jQuery(this).data("atts"),
            t = new Date(+e.year, +e.month - 1, +e.day, +e.hours, +e.minutes);
        jQuery(this).countdown({
            until: t,
            padZeroes: !0,
            format: e.format ? e.format : "yowdHMS",
            labels: [e.labels[0], e.labels[1], e.labels[2], e.labels[3], e.labels[4], e.labels[5], e.labels[6], e.labels[7]],
            labels1: [e.labels[0], e.labels[1], e.labels[2], e.labels[3], e.labels[4], e.labels[5], e.labels[6], e.labels[7]]
        })
    })
}

function genesisexpo_counter_init() {
    var e = jQuery(".genesisexpo_module_counter");
    e.length && e.each(function() {
        var t = jQuery(this).find(".counter_value");
        t.appear(function() {
            var e = parseFloat(t.text());
            t.countTo({
                from: 0,
                to: e,
                speed: 2e3,
                refreshInterval: 100
            })
        })
    })
}

function mobilecheck() {
    var e, t = !1;
    return e = navigator.userAgent || navigator.vendor || window.opera, (/(android|ipad|playbook|silk|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(e) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0, 4))) && (t = !0), t
}! function(c) {
    jQuery(document).ready(function() {
        ! function() {
            var e, t = document.getElementsByClassName("wgl_cpt_section");
            for (e = 0; e < t.length; e++) i(t[e])
        }()
    });
    var u = !1;

    function i(s) {
        var o, e, t, i, r, n, l = 0;
        null != s && (o = s.getElementsByClassName("container-grid")).length && (o = o[0], (e = s.getElementsByClassName("posts_grid_ajax")).length && (t = (e = e[0]).getElementsByClassName("ajax_data")).length && (i = (t = t[0]).value, i = JSON.parse(i), l += (r = i).post_count, (n = s.getElementsByClassName("load_more_item")).length && (n = n[0]).addEventListener("click", function(e) {
            u || (u = !0, jQuery(this).addClass("loading"), e.preventDefault(), r.offset_items = l, r.items_load = r.items_load, c.post(wgl_core.ajaxurl, {
                action: "wgl_ajax",
                data: r
            }, function(e, t) {
                var i, n;
                if ((i = document.createElement("div")).innerHTML = e, n = c(".item", i), c(".hidden_load_more", i).length ? jQuery(s).find(".load_more_wrapper").fadeOut(300, function() {
                        c(this).remove()
                    }) : jQuery(s).find(".load_more_wrapper .load_more_item").removeClass("loading"), c(o).hasClass("carousel")) c(o).find(".slick-track").append(n), c(o).find(".slick-dots").remove(), c(o).find(".genesisexpo_carousel_slick").slick("reinit");
                else if (c(o).hasClass("grid")) n = n.hide(), c(o).append(n), n.fadeIn("slow");
                else {
                    var a = jQuery(n);
                    jQuery(o).isotope("insert", a), jQuery(o).imagesLoaded().always(function() {
                        jQuery(o).isotope("layout"), jQuery(".isotope-filter a").each(function() {
                            var e = this.getAttribute("data-filter"),
                                t = jQuery(this).closest(".wgl_portfolio_list").find(".wgl_portfolio_list-item").filter(e).length;
                            jQuery(this).find(".number_filter").text(t)
                        })
                    })
                }
                "function" == typeof jQuery.fn.waypoint && jQuery(o).find(".wpb_animate_when_almost_visible:not(.wpb_start_animation)").waypoint(function() {
                    jQuery(this).addClass("wpb_start_animation animated")
                }, {
                    offset: "100%"
                }), l += parseInt(r.items_load), u = !1
            }))
        }, !1)))
    }
}(jQuery);
var click = mobilecheck() && "ontouchstart" in document.documentElement ? "touchstart" : "click";

function initClickEvent() {
    click = mobilecheck() && "ontouchstart" in document.documentElement ? "touchstart" : "click"
}

function genesisexpo_slick_navigation_init() {
    jQuery.fn.genesisexpo_slick_navigation = function() {
        jQuery(this).each(function() {
            jQuery(this);
            jQuery(this).find("span.left_slick_arrow").on("click", function() {
                jQuery(this).closest(".wgl_cpt_section").find(".slick-prev").trigger("click")
            }), jQuery(this).find("span.right_slick_arrow").on("click", function() {
                jQuery(this).closest(".wgl_cpt_section").find(".slick-next").trigger("click")
            })
        })
    }
}

function is_visible_init() {
    jQuery.fn.is_visible = function() {
        var e = jQuery(this).offset().top,
            t = e + jQuery(this).outerHeight(),
            i = jQuery(window).scrollTop(),
            n = i + jQuery(window).height();
        return i < t && e < n
    }
}

function genesisexpo_img_layers() {
    jQuery(".genesisexpo_module_img_layer").each(function() {
        var e = jQuery(this),
            t = function() {
                e.appear(function() {
                    e.addClass("img_layer_animate")
                }, {
                    done: !0
                })
            };
        jQuery(window).on("resize", t), jQuery(window).on("load", t)
    })
}

function genesisexpo_instagram_init() {
    var i = jQuery("#sb_instagram");
    setTimeout(function() {
        if (0 !== i.length) {
            var e = jQuery(".sbi_item").size();
            if (e % 2 != 0) {
                var t = Math.floor(e / 2);
                jQuery(".sbi_item:eq( " + t + " )").addClass("hover-active")
            } else t = Math.floor(e / 2), jQuery(".sbi_item:eq(" + (t - 2) + "), .sbi_item:eq(" + (t + 1) + ")").addClass("hover-active")
        }
    }, 1200)
}

function genesisexpo_isotope() {
    if (jQuery(".isotope").length) {
        var e = jQuery(".isotope").get(0),
            i = imagesLoaded(e, function() {
                jQuery(".isotope").isotope({
                    layoutMode: "masonry",
                    percentPosition: !0,
                    itemSelector: ".wgl_portfolio_list-item, .item",
                    masonry: {
                        columnWidth: ".wgl_portfolio_list-item-size, .wgl_portfolio_list-item, .item"
                    }
                }), jQuery(window).trigger("resize")
            });
        jQuery(".isotope-filter a").each(function() {
            var e = this.getAttribute("data-filter"),
                t = jQuery(this).closest(".wgl_portfolio_list").find(".wgl_portfolio_list-item").filter(e).length;
            jQuery(this).find(".number_filter").text(t)
        }), jQuery(".isotope-filter a").on("click", function(e) {
            e.preventDefault(), jQuery(this).addClass("active").siblings().removeClass("active");
            var t = jQuery(this).attr("data-filter");
            jQuery(i.elements).isotope({
                filter: t
            })
        })
    }
}

function genesisexpo_menu_lavalamp() {
    var e = jQuery(".lavalamp_on > ul");
    0 !== e.length && e.each(function() {
        jQuery(this).lavalamp({
            easing: "easeInOutCubic"
        })
    })
}

function genesisexpo_link_scroll() {
    jQuery("a.smooth-scroll, .smooth-scroll").on("click", function(e) {
        var t;
        if ("A" == this.tagName) t = jQuery.attr(this, "href");
        else {
            var i = jQuery(this).find("a");
            t = jQuery(i).attr("href")
        }
        jQuery("html, body").animate({
            scrollTop: jQuery(t).offset().top
        }, 500), e.preventDefault()
    })
}

function genesisexpo_message_anim_init() {
    jQuery(".message_close_button").on("click", function() {
        jQuery(this).closest(".genesisexpo_module_message_box.closable").slideUp(350)
    })
}

function genesisexpo_mobile_header() {
    var g, e = jQuery(".wgl-mobile-header .mobile_nav_wrapper .primary-nav > ul");
    (g = jQuery).fn.wglMobileMenu = function(f) {
        var y = {
            toggleID: ".mobile-hamburger-toggle",
            switcher: ".button_switcher",
            back: ".back",
            anchor: ".menu-item-has-children > a[href*=#]"
        };
        return 0 === this.length ? this : this.each(function() {
            var e = {},
                t = g(this),
                i = jQuery(".mobile_nav_wrapper .primary-nav > ul ul"),
                n = jQuery(".mobile_nav_wrapper").data("mobileWidth"),
                a = jQuery(".mobile-hamburger-toggle"),
                s = jQuery("body"),
                o = "is-active",
                r = "show_sub_menu",
                l = "mobile_switch_on",
                c = "button_switcher",
                u = function() {
                    jQuery(window).width() <= n ? a.hasClass(o) || d() : m()
                },
                d = function() {
                    i.removeClass(r), t.hide().addClass(l), s.removeClass(l)
                },
                m = function() {
                    i.removeClass(r), s.removeClass(l), t.show().removeClass(l), a.removeClass(o), jQuery("." + c).removeClass("is-active")
                },
                p = function() {
                    t.find(".menu-item-has-children").each(function() {
                        jQuery(this).find("> a").append('<span class="' + c + '"></span>')
                    }), t.find("ul.sub-menu").each(function() {
                        var e = jQuery(this),
                            t = e.closest("li").find("> a");
                        jQuery("<li/>", {
                            class: "back menu-item",
                            html: "<a href='#'>" + t.text() + "</a>"
                        }).prependTo(e)
                    })
                },
                h = function(e) {
                    e.preventDefault(), jQuery(this).parent().prev(".sub-menu").toggleClass(r), jQuery(this).parent().next(".sub-menu").toggleClass(r), jQuery(this).toggleClass(o)
                };
            e.settings = g.extend({}, y, f), p(), u(), jQuery(e.settings.toggleID).on(click, function(e) {
                jQuery(this).toggleClass(o), t.toggleClass(r).slideToggle(), s.toggleClass(l)
            }), jQuery(e.settings.switcher).on(click, h), jQuery(e.settings.anchor).on(click, h), jQuery(e.settings.back).on(click, function(e) {
                e.preventDefault(), jQuery(this).closest(".sub-menu").removeClass(r), jQuery(this).closest(".sub-menu").prev("a").removeClass(o), jQuery(this).closest(".sub-menu").prev("a").find("." + c).removeClass(o)
            }), jQuery(window).resize(function() {
                u()
            })
        })
    }, e.wglMobileMenu()
}

function genesisexpo_page_title_parallax() {
    var e = jQuery(".page-header.page_title_parallax");
    0 !== e.length && e.paroller()
}

function genesisexpo_parallax_video() {
    jQuery(".parallax-video").each(function() {
        jQuery(this).jarallax({
            loop: !0,
            speed: 1,
            videoSrc: jQuery(this).data("video"),
            videoStartTime: jQuery(this).data("start"),
            videoEndTime: jQuery(this).data("end")
        })
    })
}

function particles_custom() {
    jQuery(".particles-js").each(function() {
        var e, t = jQuery(this).attr("id"),
            i = jQuery(this).data("particles-color");
        if (1 == jQuery(this).data("type")) var n = 60,
            a = !1;
        else n = 110, a = !0;
        particlesJS(t, {
            particles: {
                number: {
                    value: n,
                    density: {
                        enable: !0,
                        value_area: 800
                    }
                },
                color: {
                    value: i
                },
                shape: {
                    type: "circle",
                    stroke: {
                        width: 0,
                        color: "#000000"
                    },
                    polygon: {
                        nb_sides: 5
                    },
                    image: {
                        src: "img/github.svg",
                        width: 100,
                        height: 100
                    }
                },
                opacity: {
                    value: .5,
                    random: !1,
                    anim: {
                        enable: !1,
                        speed: 1,
                        opacity_min: .1,
                        sync: !1
                    }
                },
                size: {
                    value: 3,
                    random: !0,
                    anim: {
                        enable: !1,
                        speed: 33.56643356643357,
                        size_min: .1,
                        sync: !0
                    }
                },
                line_linked: {
                    enable: a,
                    distance: 150,
                    color: i,
                    opacity: .4,
                    width: 1
                },
                move: {
                    enable: !0,
                    speed: 2,
                    direction: "none",
                    random: !1,
                    straight: !1,
                    out_mode: "out",
                    bounce: !1,
                    attract: {
                        enable: !1,
                        rotateX: 600,
                        rotateY: 1200
                    }
                }
            },
            interactivity: {
                detect_on: "canvas",
                events: {
                    onhover: {
                        enable: !0,
                        mode: "grab"
                    },
                    onclick: {
                        enable: !0,
                        mode: "push"
                    },
                    resize: !0
                },
                modes: {
                    grab: {
                        distance: 158.35505639876231,
                        line_linked: {
                            opacity: 1
                        }
                    },
                    bubble: {
                        distance: 400,
                        size: 40,
                        duration: 2,
                        opacity: 8,
                        speed: 3
                    },
                    repulse: {
                        distance: 200,
                        duration: .4
                    },
                    push: {
                        particles_nb: 4
                    },
                    remove: {
                        particles_nb: 2
                    }
                }
            },
            retina_detect: !0
        }), e = function() {
            requestAnimationFrame(e)
        }, requestAnimationFrame(e)
    })
}

function genesisexpo_videobox_init() {
    0 !== jQuery(".videobox, .swipebox").length && jQuery(".videobox, .swipebox").swipebox({
        autoplayVideos: !0
    })
}

function genesisexpo_search_init() {
    var c;
    (c = jQuery).fn.wglSearch = function(r) {
        var l = {
            toggleID: ".header_search-button",
            closeID: ".header_search-close",
            searchField: ".header_search-field",
            body: "body > *:not(header)"
        };
        return 0 === this.length ? this : this.each(function() {
            var e = {},
                t = c(this),
                i = "header_search-open",
                n = ".header_search",
                a = function() {
                    jQuery(t).removeClass(i)
                },
                s = function(e) {
                    c(t).closest(n).hasClass(i) ? a() : (c(t).addClass(i), setTimeout(function() {
                        c(t).find("input.search-field").focus()
                    }, 100))
                },
                o = function(e) {
                    var t = jQuery(n);
                    c(event.target).closest(".search-form").length || c(t).hasClass(i) && a()
                };
            e.settings = c.extend({}, l, r), jQuery(this).hasClass("search_standard") ? jQuery(this).find(e.settings.toggleID).on(click, s) : (jQuery(e.settings.toggleID).on(click, s), jQuery(e.settings.searchField).on(click, o)), jQuery(e.settings.body).on(click, o)
        })
    }, jQuery(".header_search").wglSearch()
}

function genesisexpo_select_wrap() {
    jQuery(".widget select").each(function() {
        jQuery(this).wrap("<div class='select__field'></div>")
    })
}

function genesisexpo_skrollr_init() {
    jQuery(".blog_skrollr_init").length && (/Android|iPhone|iPad|iPod|BlackBerry|Windows Phone/i.test(navigator.userAgent || navigator.vendor || window.opera) || skrollr.init({
        smoothScrolling: !1,
        forceHeight: !1
    }))
}

function genesisexpo_sticky_init() {
    var i = ".wgl-sticky-header",
        n = jQuery(i).height(),
        a = jQuery(i).data("style"),
        s = 0;

    function e(e) {
        if (e) {
            var t = jQuery(window).scrollTop();
            "standard" == a ? n <= t ? jQuery(i).addClass("sticky_active") : jQuery(i).removeClass("sticky_active") : (n < t ? s < t ? jQuery(i).removeClass("sticky_active") : jQuery(i).addClass("sticky_active") : jQuery(i).removeClass("sticky_active"), s = t)
        }
    }
    0 !== jQuery(".wgl-sticky-header").length && (jQuery(window).scroll(function() {
        e(jQuery(this))
    }), jQuery(window).resize(function() {
        e(jQuery(this))
    }))
}

function genesisexpo_sticky_sidebar() {
    jQuery(".sticky-sidebar").length && jQuery(".sticky-sidebar").each(function() {
        jQuery(this).theiaStickySidebar({
            additionalMarginTop: 30,
            additionalMarginBottom: 30
        })
    })
}

function wgl_timeTabs() {
    jQuery(".wgl_timetabs").length && jQuery(".wgl_timetabs").each(function() {
        var e = jQuery(this),
            t = e.find(".timetabs_headings .wgl_tab"),
            i = e.find(".timetabs_data .timetab_container");
        t.filter(":first").addClass("active"), i.filter(":not(:first)").hide(), t.each(function() {
            var t = jQuery(this);
            t.on("click tap", function() {
                var e = t.data("tab-id");
                t.addClass("active").siblings().removeClass("active"), 1200 < jQuery(window).width() ? jQuery(".wgl_timetabs .timetab_container[data-tab-id=" + e + "]").slideDown({
                    start: function() {
                        jQuery(this).css({
                            display: "block"
                        })
                    }
                }).siblings().slideUp() : jQuery(".wgl_timetabs .timetab_container[data-tab-id=" + e + "]").slideDown({
                    start: function() {
                        jQuery(this).css({
                            display: "flex"
                        })
                    }
                }).siblings().slideUp()
            })
        }), jQuery(window).on("resize", function() {
            1200 < jQuery(window).width() ? e.find('.timetab_container[style*="flex"]').css("display", "block") : e.find('.timetab_container[style*="block"]').css("display", "flex")
        })
    })
}

function genesisexpo_init_timeline_appear() {
    var e = jQuery(".genesisexpo_module_time_line_vertical.appear_anim .time_line-item");
    e.length && e.each(function() {
        var e = jQuery(this);
        e.appear(function() {
            e.addClass("item_show")
        })
    })
}

function genesisexpo_init_timeline_horizontal_appear() {
    var e = jQuery(".genesisexpo_module_time_line_horizontal.appear_anim");
    e.length && e.each(function() {
        var e = jQuery(this);
        e.appear(function() {
            e.find(".time_line-item").each(function(e) {
                jQuery(this).delay(250 * e).animate({
                    opacity: 1
                }, 250)
            })
        })
    })
}

function genesisexpo_init_progress_appear() {
    var e = jQuery(".progress_bar_wrap");
    e.length && e.each(function() {
        var e = jQuery(this),
            t = e.find(".progress_bar"),
            i = t.data("width"),
            n = e.find(".progress_value");
        e.appear(function() {
            t.css("width", i + "%");
            var e = parseFloat(n.text());
            n.countTo({
                from: 0,
                to: e,
                speed: 1e3,
                refreshInterval: 10
            })
        })
    })
}

function genesisexpo_woocommerce_qty() {
    jQuery(".quantity.number-input span.minus").on("click", function() {
        this.parentNode.querySelector("input[type=number]").stepDown(), document.querySelector(".woocommerce-cart-form [name=update_cart]") && (document.querySelector(".woocommerce-cart-form [name=update_cart]").disabled = !1)
    }), jQuery(".quantity.number-input span.plus").on("click", function() {
        this.parentNode.querySelector("input[type=number]").stepUp(), document.querySelector(".woocommerce-cart-form [name=update_cart]") && (document.querySelector(".woocommerce-cart-form [name=update_cart]").disabled = !1)
    }), jQuery(".wgl-mobile-header .mini-cart > a.woo_icon").on("click", function(e) {
        e.preventDefault(), jQuery(this).parent().toggleClass("open_cart")
    }), jQuery("body > *:not(header)").on("click", function(e) {
        var t = jQuery(".wgl-mobile-header .mini-cart");
        jQuery(e.target).closest(".woo_mini_cart").length || jQuery(t).hasClass("open_cart") && jQuery(".wgl-mobile-header .mini-cart").removeClass("open_cart")
    })
}
jQuery(window).on("resize", initClickEvent),
    function(r) {
        r.fn.countTo = function(a) {
            a = r.extend({}, r.fn.countTo.defaults, a || {});
            var s = Math.ceil(a.speed / a.refreshInterval),
                o = (a.to - a.from) / s;
            return r(this).each(function() {
                var e = this,
                    t = 0,
                    i = a.from,
                    n = setInterval(function() {
                        i += o, t++, r(e).html(i.toFixed(a.decimals)), "function" == typeof a.onUpdate && a.onUpdate.call(e, i);
                        s <= t && (clearInterval(n), i = a.to, "function" == typeof a.onComplete && a.onComplete.call(e, i))
                    }, a.refreshInterval)
            })
        }, r.fn.countTo.defaults = {
            from: 0,
            to: 100,
            speed: 1e3,
            refreshInterval: 100,
            decimals: 0,
            onUpdate: null,
            onComplete: null
        }
    }(jQuery), jQuery(window).load(function() {
        jQuery("#preloader-wrapper").fadeOut()
    }),
    function(n, a) {
        var i = function(e, t) {
            this.element = n(e).data("lavalamp", this), this.options = n.extend({}, this.options, t), this.init()
        };
        i.prototype = {
            options: {
                current: ".current-menu-ancestor,.current-menu-item,.current-category-ancestor",
                items: "li",
                bubble: '<div class="lavalamp-object"></div>',
                animation: !1,
                blur: n.noop,
                focus: n.noop
            },
            easing: "ease",
            duration: 700,
            element: null,
            current: null,
            bubble: null,
            _focus: null,
            init: function() {
                var e, t = this,
                    i = t.element.children("li");
                this.onWindowResize = function() {
                    e && clearTimeout(e), e = setTimeout(function() {
                        t.reload()
                    }, 100)
                }, n(a).bind("resize.lavalamp", this.onWindowResize), n(i).addClass("lavalamp-item"), this.element.on("mouseover.lavalamp", ".lavalamp-item", function() {
                    t.current.each(function() {
                        t.options.blur.call(this, t)
                    }), t._move(n(this))
                }).on("mouseout.lavalamp", function() {
                    t.current.index(t._focus) < 0 && (t._focus = null, t.current.each(function() {
                        t.options.focus.call(this, t)
                    }), t._move(t.current))
                }), this.bubble = n.isFunction(this.options.bubble) ? this.options.bubble.call(this, this.element) : n(this.options.bubble).appendTo(this.element), setTimeout(function() {
                    t.element.addClass("lavalamp_animate")
                }, t.duration), t.element.addClass("lavalamp"), t.element.find(".lavalamp-object").addClass(t.options.easing), this.reload()
            },
            reload: function() {
                this.current = this.element.children(this.options.current), 0 === this.current.size() && (this.current = this.element.find(this.options.items).eq(0)), this._move(this.current, !1)
            },
            destroy: function() {
                this.bubble && this.bubble.remove(), this.element.unbind(".lavalamp"), n(a).unbind("resize.lavalamp", this.onWindowResize)
            },
            _move: function(e, t) {
                var i = e.position();
                i.left = i.left + parseInt(e.children("a").css("paddingLeft"));
                var n = {
                    transform: "translate(" + i.left + "px," + i.top + "px)",
                    width: e.children().children().outerWidth(!1) + "px"
                };
                this._focus = e, "0" === this.bubble.css("opacity") ? this.bubble.css({
                    WebkitTransitionProperty: "opacity",
                    msTransitionProperty: "opacity",
                    MozTransitionProperty: "opacity",
                    OTransitionProperty: "opacity",
                    transitionProperty: "opacity"
                }) : this.bubble.css({
                    WebkitTransitionProperty: "all",
                    msTransitionProperty: "all",
                    MozTransitionProperty: "all",
                    OTransitionProperty: "all",
                    transitionProperty: "all"
                }), this.bubble.css({
                    WebkitTransitionDuration: this.options.duration / 1e3 + "s",
                    msTransitionDuration: this.options.duration / 1e3 + "s",
                    MozTransitionDuration: this.options.duration / 1e3 + "s",
                    OTransitionDuration: this.options.duration / 1e3 + "s",
                    transitionDuration: this.options.duration / 1e3 + "s"
                }), this.bubble.css(n)
            }
        }, n.fn.lavalamp = function(t) {
            if ("string" != typeof t) return this.each(function() {
                var e = n(this).data("lavalamp");
                e ? (n.extend(e.options, t || {}), e.reload()) : new i(this, t)
            });
            var e = n(this).data("lavalamp");
            return e[t].apply(e, Array.prototype.slice.call(arguments, 1))
        }
    }(jQuery, window),
    function(a) {
        a(document).on("click", ".sl-button", function() {
            var s, e = a(this),
                t = e.attr("data-post-id"),
                i = e.attr("data-nonce"),
                n = e.attr("data-iscomment"),
                o = (s = a("1" === n ? ".sl-comment-button-" + t : ".sl-button-" + t)).next("#sl-loader");
            return "" !== t && a.ajax({
                type: "POST",
                url: wgl_core.ajaxurl,
                data: {
                    action: "genesisexpo_like",
                    post_id: t,
                    nonce: i,
                    is_comment: n
                },
                beforeSend: function() {
                    o.html('&nbsp;<div class="loader">Loading...</div>')
                },
                success: function(e) {
                    var t = e.icon,
                        i = e.count;
                    if (s.html(t + i), "unliked" === e.status) {
                        var n = wgl_core.like;
                        s.prop("title", n), s.removeClass("liked")
                    } else {
                        var a = wgl_core.unlike;
                        s.prop("title", a), s.addClass("liked")
                    }
                    o.empty()
                }
            }), !1
        })
    }(jQuery),
    function(l) {
        jQuery(document).ready(function() {
            ! function() {
                var e, t;
                if (e = document.querySelectorAll("li.mega-menu ul.mega-menu.sub-menu.mega-cat-sub-categories li"), t = document.querySelectorAll("li.mega-menu"), e.length)
                    for (var i = 0; i < e.length; i++) a = void 0, a = e[n = i].closest(".mega-menu-container").getElementsByClassName("mega-ajax-content"), r(e[n], a);
                var n, a;
                if (t.length)
                    for (var i = 0; i < t.length; i++) o = void 0, o = t[s = i].getElementsByClassName("mega-ajax-content"), r(t[s], o);
                var s, o
            }()
        });
        var s = !1,
            c = '<div class="mega_menu_wrapper_overlay">';

        function r(e, r) {
            var a = {};
            e.addEventListener("mouseenter", function(e) {
                var t = !0;
                if (this.classList.contains("mega-menu"))
                    for (i = this.querySelectorAll("ul.mega-menu li.menu-item"), n = 0; n < i.length; n++) i[n].classList.contains("is-active") && (l(r).find("[data-url='" + i[n].getAttribute("data-id") + "']").show().addClass("fadeIn-menu"), t = 0 == l(r).find("[data-url='" + i[n].getAttribute("data-id") + "']").length);
                else {
                    if (this.classList.contains("is-active") && this.classList.contains("is-uploaded")) return;
                    for (var i = this.closest("ul.mega-menu").querySelectorAll("li.menu-item"), n = 0; n < i.length; n++) i[n].classList.remove("is-active");
                    this.classList.add("is-active"), l(r).find(".ajax_menu").removeClass("fadeIn-menu").hide(), l(r).find(".loader-overlay").length || l(r).addClass("is-loading").append(c), l(r).find("[data-url='" + this.getAttribute("data-id") + "']").show(400, function() {
                        jQuery(this).addClass("fadeIn-menu"), l(r).hasClass("is-loading") && l(r).removeClass("is-loading").find(".mega_menu_wrapper_overlay").remove()
                    })
                }
                var o = this;
                !this.classList.contains("is-uploaded") && t && (a.id = parseInt(this.getAttribute("data-id")), a.posts_count = parseInt(this.getAttribute("data-posts-count")), a.action = "wgl_mega_menu_load_ajax", e.preventDefault(), s && 4 != s.readyState && s.abort(), s = l.ajax({
                    url: wgl_core.ajaxurl,
                    type: "post",
                    data: a,
                    beforeSend: function(e) {
                        l(r).find(".loader-overlay").length || l(r).addClass("is-loading").append(c)
                    },
                    success: function(e, t) {
                        var i, n, a, s;
                        o.classList.add("is-uploaded"), i = document.createElement("div"), (s = document.createElement("div")).classList.add("ajax_menu"), i.innerHTML = e, a = l(".items_id", i), s.setAttribute("data-url", l(a).data("identifier")), n = l(s).append(l(".item", i)), l(".ajax_menu").removeClass("fadeIn-menu").hide(), n = n.hide(), l(r).append(n), n.show().addClass("fadeIn-menu"), "function" == typeof jarallax ? genesisexpo_parallax_video() : jQuery.getScript(wgl_core.JarallaxPluginVideo, function() {
                            jQuery.getScript(wgl_core.JarallaxPlugin, function() {}).always(function(e, t) {
                                jQuery(r).find(".parallax-video").each(function() {
                                    jQuery(this).jarallax({
                                        loop: !0,
                                        speed: 1,
                                        videoSrc: jQuery(this).data("video"),
                                        videoStartTime: jQuery(this).data("start"),
                                        videoEndTime: jQuery(this).data("end")
                                    })
                                })
                            })
                        })
                    },
                    error: function(e) {
                        o.classList.remove("is-uploaded")
                    },
                    complete: function(e) {
                        l(r).removeClass("is-loading").find(".mega_menu_wrapper_overlay").remove()
                    }
                }))
            }, !1)
        }
        c += '<div class="preloader_type preloader_dot">', c += '<div class="mega_menu_wrapper_preloader wgl_preloader dot">', c += "<span></span>", c += "<span></span>", c += "<span></span>", c += "</div>", c += "</div>", c += "</div>"
    }(jQuery);